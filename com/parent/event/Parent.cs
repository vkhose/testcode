// ------------------------------------------------------------------------------
// <auto-generated>
//    Generated by avrogen, version 1.10.0.0
//    Changes to this file may cause incorrect behavior and will be lost if code
//    is regenerated
// </auto-generated>
// ------------------------------------------------------------------------------
namespace com.parent.@event
{
	using System;
	using System.Collections.Generic;
	using System.Text;
	using Avro;
	using Avro.Specific;
	
	public partial class Parent : ISpecificRecord
	{
		public static Schema _SCHEMA = Avro.Schema.Parse("{\"type\":\"record\",\"name\":\"Parent\",\"namespace\":\"com.parent.event\",\"fields\":[{\"name\"" +
				":\"children\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Child\",\"name" +
				"space\":\"com.parent.event\",\"fields\":[{\"name\":\"name\",\"type\":\"string\"}]}}}]}");
		private IList<com.parent.@event.Child> _children;
		public virtual Schema Schema
		{
			get
			{
				return Parent._SCHEMA;
			}
		}
		public IList<com.parent.@event.Child> children
		{
			get
			{
				return this._children;
			}
			set
			{
				this._children = value;
			}
		}
		public virtual object Get(int fieldPos)
		{
			switch (fieldPos)
			{
			case 0: return this.children;
			default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Get()");
			};
		}
		public virtual void Put(int fieldPos, object fieldValue)
		{
			switch (fieldPos)
			{
			case 0: this.children = (IList<com.parent.@event.Child>)fieldValue; break;
			default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Put()");
			};
		}
	}
}
